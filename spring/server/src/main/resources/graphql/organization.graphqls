type Organization {
    id: ID!
    name: String!
    description: String
    address: Address
    phone: String
    email: String
    website: String
    affiliations: [Int]
    type: String!
    region: String!
    sectors: [Int]
    sectorOther: String
    approved: Boolean!
    contacts: [Contact]
}

input OrganizationInput {
    name: String!
    description: String
    address: AddressInput
    phone: String
    email: String
    website: String
    affiliations: [Int]
    type: String!
    region: String
    sectors: [Int]
    sectorOther: String
    approved: Boolean
    contacts: [ContactInput]
}

extend type Query {
    organization(id: ID!): Organization
    organizations: [Organization]
    filterOrganizations(area: Area!, sectorIds: [Int], offset: Int!, limit: Int!): [Organization]
}

extend type Mutation {
    createOrganization(details: OrganizationInput!): Organization
    updateOrganization(organizationId: ID!, details: OrganizationInput!): Organization
}
